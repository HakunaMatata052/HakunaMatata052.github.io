<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dobby</title>
  
  <subtitle>Dobby is a free elf!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hakunamatata052.github.io/"/>
  <updated>2020-08-24T09:01:01.619Z</updated>
  <id>http://hakunamatata052.github.io/</id>
  
  <author>
    <name>Hakunamatata</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Three.js 入门</title>
    <link href="http://hakunamatata052.github.io/2020/08/24/three.js/"/>
    <id>http://hakunamatata052.github.io/2020/08/24/three.js/</id>
    <published>2020-08-24T08:21:00.000Z</published>
    <updated>2020-08-24T09:01:01.619Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装three-js"><a href="#安装three-js" class="headerlink" title="安装three.js"></a>安装three.js</h3><p>使用npm安装three.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i three -S</span><br></pre></td></tr></table></figure></p><p>导入场景、相机、灯光、渲染器等类<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Scene, PerspectiveCamera, WebGLRenderer ,AmbientLight ,DirectionalLight&#125; <span class="keyword">from</span> <span class="string">"three"</span></span><br></pre></td></tr></table></figure></p><p>创建并暴露一个类，定义场景、相机、灯光等，并设置渲染的DOM容器</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Three</span> </span>&#123;</span><br><span class="line">    private scene: Scene</span><br><span class="line">    private camera: PerspectiveCamera</span><br><span class="line">    private renderer: WebGLRenderer</span><br><span class="line">    private $<span class="built_in">window</span>: HTMLElement</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">this</span>.$<span class="built_in">window</span> = <span class="built_in">document</span>.querySelector(<span class="string">"#app"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建场景"><a href="#创建场景" class="headerlink" title="创建场景"></a>创建场景</h3><p>初始化一个场景,这里我设置了一个私有方法，之后会在constructor中调用<br>scene.position.set可以设置场景在坐标系的位置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建场景</span></span><br><span class="line">private initScene(): <span class="keyword">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.scene = <span class="keyword">new</span> Scene();</span><br><span class="line">    <span class="keyword">this</span>.scene.position.set(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">this</span>.scene.lookAt(<span class="keyword">this</span>.scene.position);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="创建相机"><a href="#创建相机" class="headerlink" title="创建相机"></a>创建相机</h3><p>接着初始化相机,这里使用的是透视相机PerspectiveCamera，相机接受4个参数，分别是</p><ul><li>PerspectiveCamera(fov, aspect, near, far)</li><li>Fov – 相机的视锥体的垂直视野角</li><li>Aspect – 相机视锥体的长宽比</li><li>Near – 相机视锥体的近平面</li><li>Far – 相机视锥体的远平面<br>相机的位置可以使用camera.position.x，camera.position.y，camera.position.z进行赋值来改变<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建相机</span></span><br><span class="line">private initCamera(): <span class="keyword">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.camera = <span class="keyword">new</span> PerspectiveCamera(</span><br><span class="line">        <span class="number">25</span>,</span><br><span class="line">        <span class="keyword">this</span>.$<span class="built_in">window</span>.clientWidth / <span class="keyword">this</span>.$<span class="built_in">window</span>.clientHeight,</span><br><span class="line">        <span class="number">0.1</span>,</span><br><span class="line">        <span class="number">1000</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">this</span>.camera.lookAt(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建光源"><a href="#创建光源" class="headerlink" title="创建光源"></a>创建光源</h3><p>接着初始化灯光,这里添加了两个灯光，一个环境光，一个平行光，可添加多个光源<br>灯光的构造函数中传入灯光颜色和透明度，颜色必须是0x+16进制色<br>环境光没有位置属性，平行光可以添加光源的位置，使用light.position.set来设置位置，传入三个参数分别是x坐标，y坐标，z坐标<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建光源</span></span><br><span class="line">private initLight(): <span class="keyword">void</span> &#123;</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="keyword">this</span>.scene.add(<span class="keyword">new</span> AmbientLight(<span class="number">0xd29c96</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// 平行光</span></span><br><span class="line">    <span class="keyword">let</span> light = <span class="keyword">new</span> DirectionalLight(<span class="number">0xffffff</span>, <span class="number">0.6</span>);</span><br><span class="line">    light.position.set(<span class="number">0</span>, <span class="number">10</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">this</span>.scene.add(light);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="创建3D渲染器"><a href="#创建3D渲染器" class="headerlink" title="创建3D渲染器"></a>创建3D渲染器</h3><p>接着创建渲染器,使用three内置的WebGLRenderer渲染器来渲染，渲染器可以通过setSize方法设置大小，这里我们设置一个和画布一样大的渲染器，如果渲染尺寸小于画布大小，则超出渲染器大小的位置将不被渲染<br>使用setClearColor方法可以设置渲染区域的背景色<br>最后将渲染器的domElement属性appendChild进需要的DOM标签内即可<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建3D渲染器</span></span><br><span class="line">private initThree(): <span class="keyword">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.renderer = <span class="keyword">new</span> WebGLRenderer();</span><br><span class="line">    <span class="keyword">this</span>.renderer.setSize(</span><br><span class="line">        <span class="keyword">this</span>.$<span class="built_in">window</span>.clientWidth,</span><br><span class="line">        <span class="keyword">this</span>.$<span class="built_in">window</span>.clientHeight</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">this</span>.renderer.setClearColor(<span class="number">0xb34149</span>, <span class="number">1</span>); <span class="comment">//设置背景颜色</span></span><br><span class="line">    <span class="keyword">this</span>.$<span class="built_in">window</span>.appendChild(<span class="keyword">this</span>.renderer.domElement);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接着将这些方法添加进constructor内，让实例创建时自动执行<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Three</span> </span>&#123;</span><br><span class="line">    private scene: Scene</span><br><span class="line">    private camera: PerspectiveCamera</span><br><span class="line">    private renderer: WebGLRenderer</span><br><span class="line">    private $<span class="built_in">window</span>: HTMLElement</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">this</span>.$<span class="built_in">window</span> = <span class="built_in">document</span>.querySelector(<span class="string">"#app"</span>);        </span><br><span class="line">        <span class="keyword">this</span>.initScene();</span><br><span class="line">        <span class="keyword">this</span>.initThree();</span><br><span class="line">        <span class="keyword">this</span>.initCamera();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="开启控制器"><a href="#开启控制器" class="headerlink" title="开启控制器"></a>开启控制器</h3><p>接着使用renderer.render方法就可以渲染了，但是这样只能渲染一帧画面，我们需要做鼠标控制，或者3D动画是需要实时渲染的<br>例如加一个鼠标控制<br>首先导入控制器<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; OrbitControls &#125; <span class="keyword">from</span> <span class="string">'three/examples/jsm/controls/OrbitControls'</span>;</span><br></pre></td></tr></table></figure></p><p>接着初始化这个控制器，这里依然使用一个方法,然后添加进constructor<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启控制器</span></span><br><span class="line">private initControls(): <span class="keyword">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.controls = <span class="keyword">new</span> OrbitControls(<span class="keyword">this</span>.camera, <span class="keyword">this</span>.renderer.domElement);</span><br><span class="line">    <span class="keyword">this</span>.controls.enableDamping = <span class="literal">true</span>; <span class="comment">// 惯性滑动，滑动大小默认0.25</span></span><br><span class="line">    <span class="keyword">this</span>.controls.dampingFactor = <span class="number">0.05</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// //控制</span></span><br><span class="line">    <span class="keyword">this</span>.controls.enableZoom = <span class="literal">false</span>; <span class="comment">// 缩放</span></span><br><span class="line">    <span class="keyword">this</span>.controls.enableKeys = <span class="literal">false</span>; <span class="comment">// 键盘</span></span><br><span class="line">    <span class="keyword">this</span>.controls.enablePan = <span class="literal">false</span>; <span class="comment">// 是否开启右键拖拽</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 旋转速度</span></span><br><span class="line">    <span class="keyword">this</span>.controls.rotateSpeed = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动旋转</span></span><br><span class="line">    <span class="keyword">this</span>.controls.autoRotate = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.controls.autoRotateSpeed = <span class="number">-0.01</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置仰视角和俯视角,后续进行重置</span></span><br><span class="line">    <span class="keyword">this</span>.controls.maxPolarAngle = <span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">this</span>.controls.minPolarAngle = <span class="built_in">Math</span>.PI / <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">this</span>.controls.zoomSpeed = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//设置相机距离原点的最远距离</span></span><br><span class="line">    <span class="comment">// controls.minDistance = 120;</span></span><br><span class="line">    <span class="comment">//设置相机距离原点的最远距离</span></span><br><span class="line">    <span class="comment">// controls.maxDistance = 120 + 120 * 0.5;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h3><p>这样添加的控制器虽然可以控制场景，但是画布不会重新渲染，所以我们需要添加一个渲染函数并且每次调用自身来更新画面<br>这里使用的是requestAnimationFrame函数来调用自身，也可以使用setInterval但是setInterval是固定时间渲染，如果场景过大，过复杂，可能时间到了还没渲染好又得渲染下一帧，这样会导致页面卡死<br>requestAnimationFrame没有固定时间，他会在当前帧渲染完毕后执行下一次，这样就不会导致页面卡死了<br>接着在render方法中使用controls.update()来更新每次的控制，使用renderer.render来更新画面<br>最后在constructor函数中调用render即可<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">private render(): <span class="keyword">void</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.render());</span><br><span class="line">    <span class="keyword">this</span>.controls.update();</span><br><span class="line">    <span class="keyword">this</span>.renderer.render(<span class="keyword">this</span>.scene, <span class="keyword">this</span>.camera);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后在需要需要的地方导入并new Three()就可以了</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><iframe src="/2020/08/24/three.js/three.html" width="600" height="600" frameborder="no" border="0" marginwidth="0" marginheight="0" allowtransparency="yes"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装three-js&quot;&gt;&lt;a href=&quot;#安装three-js&quot; class=&quot;headerlink&quot; title=&quot;安装three.js&quot;&gt;&lt;/a&gt;安装three.js&lt;/h3&gt;&lt;p&gt;使用npm安装three.js&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i three -S&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;导入场景、相机、灯光、渲染器等类&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Scene, PerspectiveCamera, WebGLRenderer ,AmbientLight ,DirectionalLight&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建并暴露一个类，定义场景、相机、灯光等，并设置渲染的DOM容器&lt;/p&gt;
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
    
      <category term="three.js threejs three" scheme="http://hakunamatata052.github.io/tags/three-js-threejs-three/"/>
    
  </entry>
  
  <entry>
    <title>制作菱形图片遮罩</title>
    <link href="http://hakunamatata052.github.io/2019/03/01/mark/"/>
    <id>http://hakunamatata052.github.io/2019/03/01/mark/</id>
    <published>2019-03-01T02:56:52.000Z</published>
    <updated>2020-08-21T02:57:01.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>使用box-shadow制作菱形遮罩</p><p>需要在原有结构内增加一个shaow遮罩层</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://picsum.photos/300/300"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shadow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>外层div设置相对定位position: relative;<br>将shadow层旋转45度，并设置阴影；<br>box-shadow中的值分别是：<br>box-shadow：水平位移 垂直位移 阴影宽度 模糊程度 颜色<br>这里水平和垂直位移这只为0，即从中间开始向四周出现阴影。 阴影宽度一定要宽于外框，模糊程度可以填0，即不模糊，颜色填白色。</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shadow</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">200px</span> <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><iframe src="/2019/03/01/mark/mark.html" width="600" height="600" frameborder="no" border="0" marginwidth="0" marginheight="0" allowtransparency="yes"></iframe><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>使用两次旋转达到菱形效果</p><h3 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://picsum.photos/300/300"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS-1"><a href="#CSS-1" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">-o-transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">-o-transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><iframe src="/2019/03/01/mark/mark2.html" width="650" height="500" frameborder="no" border="0" marginwidth="0" marginheight="0" allowtransparency="yes"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h1&gt;&lt;p&gt;使用box-shadow制作菱形遮罩&lt;/p&gt;
&lt;p&gt;需要在原有结构内增加一个shaow遮罩层&lt;/p&gt;
&lt;h3 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://picsum.photos/300/300&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;shadow&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hakunamatata052.github.io/categories/CSS/"/>
    
    
      <category term="CSS CSS3" scheme="http://hakunamatata052.github.io/tags/CSS-CSS3/"/>
    
  </entry>
  
  <entry>
    <title>科学上网（翻墙）神器【蓝灯】</title>
    <link href="http://hakunamatata052.github.io/2019/01/21/lantern/"/>
    <id>http://hakunamatata052.github.io/2019/01/21/lantern/</id>
    <published>2019-01-21T01:08:46.000Z</published>
    <updated>2020-08-21T02:57:01.402Z</updated>
    
    <content type="html"><![CDATA[<p>给大家介绍一款免费限制流量的科学上网神器<strong>蓝灯lantren</strong><br>下载地址：<a href="https://github.com/HakunaMatata052/lantern-binaries" target="_blank" rel="noopener">Github</a><br>里面包含Windows，Android，macOS三个版本。<br>点击对应拓展名文件进入下载即可<br><a id="more"></a></p><h2 id="以Windows为例"><a href="#以Windows为例" class="headerlink" title="以Windows为例"></a>以Windows为例</h2><p>点击3.0最新版的exe文件<br><img src="/2019/01/21/lantern/01.png"></p><p>点击download下载<br></p><p>下载先来后双击安装即可。<br><img src="/2019/01/21/lantern/03.jpg"><br>速度还可以~~</p><p>每个月有500MB的免费流量，可以升级到专业版，不限制流量。<br>博主500MB基本足够。<br>而且他采用的是只能切换线路，如果访问的是国内站点，是不通过VPN的，也不会消耗流量。只有当你访问被墙网站的时候才会切换vpn线路。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给大家介绍一款免费限制流量的科学上网神器&lt;strong&gt;蓝灯lantren&lt;/strong&gt;&lt;br&gt;下载地址：&lt;a href=&quot;https://github.com/HakunaMatata052/lantern-binaries&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;&lt;br&gt;里面包含Windows，Android，macOS三个版本。&lt;br&gt;点击对应拓展名文件进入下载即可&lt;br&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="http://hakunamatata052.github.io/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="翻墙" scheme="http://hakunamatata052.github.io/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>一句代码解决bootstrap栅格几个设置5等分</title>
    <link href="http://hakunamatata052.github.io/2019/01/04/bootstrap-offset/"/>
    <id>http://hakunamatata052.github.io/2019/01/04/bootstrap-offset/</id>
    <published>2019-01-04T07:45:01.000Z</published>
    <updated>2020-08-21T02:57:01.360Z</updated>
    
    <content type="html"><![CDATA[<p>HTML<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col-xs-offset-1 col-xs-2 text-center"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col-xs-2 text-center"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col-xs-2 text-center"</span>&gt;</span>番茄<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col-xs-2 text-center"</span>&gt;</span>石榴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col-xs-2 text-center"</span>&gt;</span>芒果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>正常设置每个栅格2等分，最后会在末尾空余出2等分（共12等分），然后第一个栅格设置col-xs-offset-1，意思是偏移一格，等于把最后的2等分其中一份放在最前面了。<br>这样做可以解决bootstrap栅格5等分的问题，但是最终宽度会比正常窄，可以单独设置container的宽来解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HTML&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="HTML" scheme="http://hakunamatata052.github.io/categories/HTML/"/>
    
      <category term="BOOTSTRAP" scheme="http://hakunamatata052.github.io/categories/HTML/BOOTSTRAP/"/>
    
    
      <category term="bootstrap" scheme="http://hakunamatata052.github.io/tags/bootstrap/"/>
    
      <category term="offset" scheme="http://hakunamatata052.github.io/tags/offset/"/>
    
  </entry>
  
  <entry>
    <title>This is dobby!</title>
    <link href="http://hakunamatata052.github.io/2019/01/03/dobby/"/>
    <id>http://hakunamatata052.github.io/2019/01/03/dobby/</id>
    <published>2019-01-03T09:22:09.000Z</published>
    <updated>2020-08-21T02:57:01.361Z</updated>
    
    <content type="html"><![CDATA[<p><video src="/2019/01/03/dobby/3bc53ac5ca4fde47810af8abb0c0a601.mp4" autoplay controls style="display:block;margin:auto"></video><br>这就是Dobby Orz.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;video src=&quot;/2019/01/03/dobby/3bc53ac5ca4fde47810af8abb0c0a601.mp4&quot; autoplay controls style=&quot;display:block;margin:auto&quot;&gt;&lt;/video&gt;&lt;br&gt;这就是Do
      
    
    </summary>
    
      <category term="日常" scheme="http://hakunamatata052.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>如何使用fonts.googleapis.com使自己的网站增加更多字体</title>
    <link href="http://hakunamatata052.github.io/2019/01/02/fonts-googleapis/"/>
    <id>http://hakunamatata052.github.io/2019/01/02/fonts-googleapis/</id>
    <published>2019-01-02T09:04:17.000Z</published>
    <updated>2020-08-21T02:57:01.369Z</updated>
    
    <content type="html"><![CDATA[<p>首先，fonts.googleapis.com解决的是客户端电脑没有安装字体，但是网站主又想客户看到自己想要的字体，通常的做法就是网站的css调用网站内部的字体文件，但是这样做非常不灵活，我们需要更换字体时，不然需要修改css，还需要替换字体文件，于是fonts.googleapis.com就可以解决这个问题。<br><a id="more"></a></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>CSS引入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"//fonts.googleapis.com/css?family=Monda:300,300italic,400,400italic,700,700italic|PT Mono:300,300italic,400,400italic,700,700italic&amp;subset=latin,latin-ext"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>链接的具体构成就是：<br>fonts.googleapis.com/css?family=<strong>字体名称</strong>:<strong>加粗程度</strong>,<strong>加粗程度+是否斜体</strong>&amp;subset=latin,latin-ext<br>其中如果需要多种字体用  <strong>|</strong>  隔开，如果有多种加粗程度<br>最后在需要使用的元素上加入font-family属性即可<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'Monda'</span>, <span class="string">'PT Mono'</span> , serif;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">48px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>fonts.googleapis.com还有一种ajax请求方式，这里不推荐使用，css是最快也最容易维护的方式。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，fonts.googleapis.com解决的是客户端电脑没有安装字体，但是网站主又想客户看到自己想要的字体，通常的做法就是网站的css调用网站内部的字体文件，但是这样做非常不灵活，我们需要更换字体时，不然需要修改css，还需要替换字体文件，于是fonts.googleapis.com就可以解决这个问题。&lt;br&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hakunamatata052.github.io/categories/HTML/"/>
    
    
      <category term="googleapis" scheme="http://hakunamatata052.github.io/tags/googleapis/"/>
    
      <category term="字体" scheme="http://hakunamatata052.github.io/tags/%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加置顶功能和标识</title>
    <link href="http://hakunamatata052.github.io/2018/12/29/hexo-top/"/>
    <id>http://hakunamatata052.github.io/2018/12/29/hexo-top/</id>
    <published>2018-12-29T09:29:09.000Z</published>
    <updated>2020-08-21T02:57:01.376Z</updated>
    
    <content type="html"><![CDATA[<p>首先看下效果<br><img src="https://i.loli.net/2018/12/29/5c273ed38214d.png" alt="效果图"><br><a id="more"></a></p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><h3 id="新建-修改-文章"><a href="#新建-修改-文章" class="headerlink" title="新建/修改 文章"></a>新建/修改 文章</h3><p>新建或修改文章时在文章<strong>Front-matter</strong>中加入<strong>top: true</strong>即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 无JS实现在线客服的切换效果</span><br><span class="line">date: 2018-12-20 15:05:17</span><br><span class="line">tags:</span><br><span class="line">    - css</span><br><span class="line">    - css3</span><br><span class="line">categories: CSS</span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><blockquote><p>到此为止，文章的置顶功能就实现了,但是我们还需要给置顶的文章加个标识，如<br><img src="https://i.loli.net/2018/12/29/5c2740bd13582.png" alt><br>So，我们需要加一个图标或者文字标签<br>这里我做了一个简单的，你可以修改一下，做一个好看的图标</p></blockquote><h3 id="添加标识"><a href="#添加标识" class="headerlink" title="添加标识"></a>添加标识</h3><p>如果你使用的是<strong>next</strong>的主题，打开目录<strong>themes/next/layout/_macro</strong>，找到文件post.swig，搜索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/&#123;% if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;% endif %&#125;&gt;</span><br></pre></td></tr></table></figure></p><p>大概在65行，在他上面添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">    &lt;span style=&quot;color:#f00;border:1px solid #f00;padding:2px 5px;font-size:12px;&quot;&gt;置顶&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>这是你会发现标识出现了，但是高度有些错位，在<strong>themes/next/source/_custom</strong>中找到<strong>custom.styl</strong>文件，添加一行<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这时你就可以看到具体的效果了</p><blockquote><p>当然你可以添加更好看的图标，只需要修改HTML和CSS即可。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先看下效果&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2018/12/29/5c273ed38214d.png&quot; alt=&quot;效果图&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hakunamatata052.github.io/categories/hexo/"/>
    
    
      <category term="Hexo" scheme="http://hakunamatata052.github.io/tags/Hexo/"/>
    
      <category term="next" scheme="http://hakunamatata052.github.io/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>利用iconfont.cn快速制作前端图标</title>
    <link href="http://hakunamatata052.github.io/2018/12/22/iconfont/"/>
    <id>http://hakunamatata052.github.io/2018/12/22/iconfont/</id>
    <published>2018-12-22T02:28:36.000Z</published>
    <updated>2020-08-21T02:57:01.378Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以前不会用iconfont.cn的时候，只知道这是个图标库，可以吧图片下载下来，然后制作成图片，在写入HTML。<br>其实没有这么麻烦，iconfont支持三种图片引入方式——Unicode，字体，svg</p></blockquote><a id="more"></a><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p>首先登录<a href="https://iconfont.cn" target="_blank" rel="noopener">iconfont</a> 这里我使用的是Github账号直接登录，你可以使用微博账号登录<br><img src="/2018/12/22/iconfont/01.jpg"></p><h2 id="搜索图标"><a href="#搜索图标" class="headerlink" title="搜索图标"></a>搜索图标</h2><p>然后再首页搜索你需要的图标，可以使用中文搜索（建议英文）<br><img src="/2018/12/22/iconfont/02.jpg"></p><p>找到想要的图标之后不要点击下载按钮，要点击购物车按钮，这样才能将多个图片集合到一个项目里<br><img src="/2018/12/22/iconfont/03.jpg"></p><p>通常一个项目或网站肯定不止一个图，这时你可以继续搜素其他图标并加入购物车<br>当你需要将所有图标制作成网站需要的字体文件或者svg文件引入时，点击右上角的购物车按钮<br><img src="/2018/12/22/iconfont/04.jpg"></p><p>这里的三个选项分别是：<br><img src="/2018/12/22/iconfont/05.jpg"></p><table><thead><tr><th>名称</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td>添加至项目</td><td style="text-align:center">添加到新建或已有的项目（后期可继续添加图标）</td></tr><tr><td>下载素材</td><td style="text-align:center">下载购物车里的图标素材，最后可以下载AI，SVG,PNG格式的图片文件</td></tr><tr><td>下载代码</td><td style="text-align:center">下载生成的引入文件 包含CSS，font，svg等，与添加项目类似，但是后期无法继续添加图标</td></tr></tbody></table><p>这里为了后期能够继续增加或删除图标，我们尽量选择添加至项目，如果没有项目，他会提示你新建项目，根据提示操作就好，这里不再赘述。</p><h2 id="引用图标"><a href="#引用图标" class="headerlink" title="引用图标"></a>引用图标</h2><p>制作好的图标可以在我的项目中看到,可以选择引用iconfont的远程地址（CDN方式），也可以下载到本地引入，如果是使用CDN方式，需要依次点击查看在线链接–生成链接<br><img src="/2018/12/22/iconfont/06.jpg"></p><h3 id="Unicode方式"><a href="#Unicode方式" class="headerlink" title="Unicode方式"></a>Unicode方式</h3><p>需要在你的css中加入上面的代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'iconfont'</span>;  <span class="comment">/* project id 978636 */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'//at.alicdn.com/t/font_978636_9jco6oz9c8i.eot'</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'//at.alicdn.com/t/font_978636_9jco6oz9c8i.eot?#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'//at.alicdn.com/t/font_978636_9jco6oz9c8i.woff'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'//at.alicdn.com/t/font_978636_9jco6oz9c8i.ttf'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'//at.alicdn.com/t/font_978636_9jco6oz9c8i.svg#iconfont'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果某个地方需要使用图标，HTML和CSS分别是这样</p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dome"</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;#xe654;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dome</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'iconfont'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的&amp; # x e 6 5 4;就是图标对应代码<br><img src="/2018/12/22/iconfont/07.jpg"></p><h3 id="Font-class"><a href="#Font-class" class="headerlink" title="Font class"></a>Font class</h3><p>font class是一个链接，需要用link引入</p><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//at.alicdn.com/t/font_978636_9jco6oz9c8i.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dome"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="css-1"><a href="#css-1" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dome</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'iconfont'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="symbol引用"><a href="#symbol引用" class="headerlink" title="symbol引用"></a>symbol引用</h3><p>拷贝项目下面生成的symbol代码：</p><h4 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js</span><br></pre></td></tr></table></figure><p>加入通用css代码：</p><h4 id="css-2"><a href="#css-2" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">       <span class="attribute">width</span>: <span class="number">1em</span>; <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">       <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span><br><span class="line">       <span class="attribute">fill</span>: currentColor;</span><br><span class="line">       <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>挑选相应图标并获取类名，应用于页面</p><h4 id="html-1"><a href="#html-1" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#icon-xxx"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的#icon-XXX对应图标代码 如icon-menu</p><blockquote><p>最后，墙裂建议使用Font class方式引入，兼容度最高，图标大小可以通过font-size控制，颜色可以通过color控制，很方便。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;以前不会用iconfont.cn的时候，只知道这是个图标库，可以吧图片下载下来，然后制作成图片，在写入HTML。&lt;br&gt;其实没有这么麻烦，iconfont支持三种图片引入方式——Unicode，字体，svg&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hakunamatata052.github.io/categories/HTML/"/>
    
    
      <category term="inconfont" scheme="http://hakunamatata052.github.io/tags/inconfont/"/>
    
      <category term="图标" scheme="http://hakunamatata052.github.io/tags/%E5%9B%BE%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>利用Github上传并引用video资源</title>
    <link href="http://hakunamatata052.github.io/2018/12/21/github-video/"/>
    <id>http://hakunamatata052.github.io/2018/12/21/github-video/</id>
    <published>2018-12-21T07:56:58.000Z</published>
    <updated>2020-08-21T02:57:01.370Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>很多网站都有背景视频的元素，利用的是【HTML5】的新特性————【video】标签<br>例如：<a href="http://www.hearttrip.net/tourlist.html" target="_blank" rel="noopener">点击打开</a> 里面的banner背景，就是一个视频</p></blockquote><a id="more"></a><p>具体代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"video.mp4"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></span><br><span class="line">您的浏览器不支持 video 标签。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>但是对于很多服务器来说，视频太站资源，太耗流量，但是将视频上传到优酷、腾讯视频上又无法获得视频真实地址（video标签中的视频必须是视频的物理地址，即必须以.mp4等的拓展名结束的地址），而且还有广告<br>这里推荐一个简单的方法：</p><blockquote><p>使用GitHub等git托管网站上传视频</p></blockquote><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>首先注册一个GitHub账号 <a href="https://github.com/" target="_blank" rel="noopener">点我注册</a><br><img src="/2018/12/21/github-video/01.jpg"></p><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>点击New新建一个项目，名称可以随便取，但是不能写中文,填写好后点击【Create repository】</p><blockquote><p>需要注意的是 必须选中Initialize this repository with a README这个选项，否则你需要安装git使用指令将视频传上去。</p></blockquote><img src="/2018/12/21/github-video/02.jpg"><img src="/2018/12/21/github-video/03.jpg"><h3 id="上传视频"><a href="#上传视频" class="headerlink" title="上传视频"></a>上传视频</h3><p>新建号项目你将看到这样的界面，点击【Upload files】上传你的视频就可以，最后上传完了之后点击【Commit changes】<br><img src="/2018/12/21/github-video/04.jpg"><br><img src="/2018/12/21/github-video/05.jpg"></p><h3 id="引用视频"><a href="#引用视频" class="headerlink" title="引用视频"></a>引用视频</h3><p>上传完毕后就能在项目中看到你的视频，点击视频后再复制【View Raw】的连接就可以获得视频的真实地址了，例如我的连接是：<a href="https://github.com/HakunaMatata052/video/blob/master/a.mp4?raw=true" target="_blank" rel="noopener">https://github.com/HakunaMatata052/video/blob/master/a.mp4?raw=true</a><br>注意：视频最后的 ?raw=true 不能删除，否则视频无法播放<br><img src="/2018/12/21/github-video/06.jpg"></p><p>最后放在代码里看一下<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"https://github.com/HakunaMatata052/video/blob/master/a.mp4?raw=true"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></span><br><span class="line">您的浏览器不支持 video 标签。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>效果：</p><video src="https://github.com/HakunaMatata052/video/blob/master/a.mp4?raw=true" controls="controls" autoplay="autoplay"><br>您的浏览器不支持 video 标签。<br></video><blockquote><p>如果想让视频当背景用的话，需要设video为自动播放，可以设置autoplay=”autoplay”具体代码如下</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"https://github.com/HakunaMatata052/video/blob/master/a.mp4?raw=true"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>  <span class="attr">autoplay</span>=<span class="string">"autoplay"</span>&gt;</span></span><br><span class="line">您的浏览器不支持 video 标签。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果需要隐藏播放控件可以去掉 controls=”controls” ，也可以使用css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">video</span><span class="selector-pseudo">::-webkit-media-controls</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>:none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;很多网站都有背景视频的元素，利用的是【HTML5】的新特性————【video】标签&lt;br&gt;例如：&lt;a href=&quot;http://www.hearttrip.net/tourlist.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击打开&lt;/a&gt; 里面的banner背景，就是一个视频&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hakunamatata052.github.io/categories/HTML/"/>
    
    
      <category term="github" scheme="http://hakunamatata052.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Vue全局公用函数</title>
    <link href="http://hakunamatata052.github.io/2018/12/21/vue-global-function/"/>
    <id>http://hakunamatata052.github.io/2018/12/21/vue-global-function/</id>
    <published>2018-12-21T03:00:29.000Z</published>
    <updated>2020-08-21T02:57:01.411Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>经常在做项目的时候会遇到一个函数在很多组件和页面中调用，如计算时间差，刷新token等操作，这时就需要定义一个全局都能调用的函数</p></blockquote><a id="more"></a><h2 id="新建js文件"><a href="#新建js文件" class="headerlink" title="新建js文件"></a>新建js文件</h2><p>可以放在src的utils文件中，命名index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exports.install = <span class="function"><span class="keyword">function</span> (<span class="params">Vue, options</span>) </span>&#123;</span><br><span class="line">    Vue.prototype.changeData = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">'执行成功'</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><p>在需要调用函数的组件内引入Vue和该函数文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>               <span class="comment">//引入Vue</span></span><br><span class="line"><span class="keyword">import</span> base <span class="keyword">from</span> <span class="string">'../../utils'</span>      <span class="comment">//引入新建的公用函数js</span></span><br><span class="line">Vue.use(base);                      <span class="comment">//使用新建的公用函数js</span></span><br></pre></td></tr></table></figure><blockquote><p>如果需要全局引用，则将调用函数写在main.js中即可</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;经常在做项目的时候会遇到一个函数在很多组件和页面中调用，如计算时间差，刷新token等操作，这时就需要定义一个全局都能调用的函数&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
      <category term="VUE" scheme="http://hakunamatata052.github.io/categories/JS/VUE/"/>
    
    
      <category term="vue" scheme="http://hakunamatata052.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>无JS实现在线客服的切换效果</title>
    <link href="http://hakunamatata052.github.io/2018/12/20/nojs-toggle/"/>
    <id>http://hakunamatata052.github.io/2018/12/20/nojs-toggle/</id>
    <published>2018-12-20T07:05:17.000Z</published>
    <updated>2020-08-21T04:45:23.640Z</updated>
    
    <content type="html"><![CDATA[<p>首先可以看下效果<br><a href="http://www.lofly.cn/" target="_blank" rel="noopener">点我查看</a></p><p>这里利用HTML的 【checkbox】类型的【input】和【label】元素的【for】属性<br>和CSS的【:checked】选择器以及【~】选择器</p><p>主要的原理是点击【label】使【label】的【for】属性指定id【input】改变选中状态（【:checked】），<br>【input】选中状态改变后，使用css改变【input】后面的元素的显示或隐藏（或定位）。</p><a id="more"></a><h1 id="首先你必须知道元素的for属性可以控制【checkbox】类型的【input】"><a href="#首先你必须知道元素的for属性可以控制【checkbox】类型的【input】" class="headerlink" title="首先你必须知道元素的for属性可以控制【checkbox】类型的【input】"></a>首先你必须知道<label>元素的for属性可以控制【checkbox】类型的【input】</label></h1><blockquote><p>例如：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"dome"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"dome"</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>效果:</p></blockquote><iframe src="/2018/12/20/nojs-toggle/01.html" width="600" height="100" frameborder="no" border="0" marginwidth="0" marginheight="0" allowtransparency="yes"></iframe><h1 id="然后利用CSS的-选择器-设置input被选中后紧跟的元素的样式"><a href="#然后利用CSS的-选择器-设置input被选中后紧跟的元素的样式" class="headerlink" title="然后利用CSS的 ~ 选择器 设置input被选中后紧跟的元素的样式"></a>然后利用CSS的 ~ 选择器 设置input被选中后紧跟的元素的样式</h1><blockquote><p>多提一句<br>~ 选择器表示元素后的同胞元素<br>如：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>~<span class="selector-tag">ul</span>&#123;</span><br><span class="line">　　<span class="attribute">background</span>:<span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>快乐生活<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">li</span>&gt;</span>生活<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">li</span>&gt;</span>生活<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">li</span>&gt;</span>生活<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>会给p元素后所有的ul元素加背景</p><p>那么我们需要做的就是为input后的元素做隐藏显示（或改变定位）<br>如何判断需要显示还是隐藏呢？<br>需要用到input的checked属性</p><blockquote><p>如果需要改变默认状态可以给input加checked=”checked”</p></blockquote><h1 id="最后具体代码如下"><a href="#最后具体代码如下" class="headerlink" title="最后具体代码如下"></a>最后具体代码如下</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dome"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"toggle"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"open"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"toggle"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        打开以后你看到的</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"toggle"</span>&gt;</span>打开<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        关闭以后你看到的</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#toggle</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#toggle</span>~<span class="selector-class">.open</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#toggle</span>~<span class="selector-class">.close</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#toggle</span><span class="selector-pseudo">:checked</span>~<span class="selector-class">.open</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#toggle</span><span class="selector-pseudo">:checked</span>~<span class="selector-class">.close</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>效果：</p></blockquote><iframe src="/2018/12/20/nojs-toggle/02.html" width="600" height="500" frameborder="no" border="0" marginwidth="0" marginheight="0" allowtransparency="yes"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先可以看下效果&lt;br&gt;&lt;a href=&quot;http://www.lofly.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点我查看&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里利用HTML的 【checkbox】类型的【input】和【label】元素的【for】属性&lt;br&gt;和CSS的【:checked】选择器以及【~】选择器&lt;/p&gt;
&lt;p&gt;主要的原理是点击【label】使【label】的【for】属性指定id【input】改变选中状态（【:checked】），&lt;br&gt;【input】选中状态改变后，使用css改变【input】后面的元素的显示或隐藏（或定位）。&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hakunamatata052.github.io/categories/CSS/"/>
    
    
      <category term="css" scheme="http://hakunamatata052.github.io/tags/css/"/>
    
      <category term="css3" scheme="http://hakunamatata052.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>javascript思维导图</title>
    <link href="http://hakunamatata052.github.io/2018/12/20/js-mind-map/"/>
    <id>http://hakunamatata052.github.io/2018/12/20/js-mind-map/</id>
    <published>2018-12-20T00:40:43.000Z</published>
    <updated>2020-08-21T02:57:01.384Z</updated>
    
    <content type="html"><![CDATA[<p>下面附上十张javascript思维导图，如果把里面的内容全部掌握，那就是高手了。思维导图提供给我们一个整体的知识体系，也可以说是一种工具，废话不多说，上图：<br><a id="more"></a></p><h2 id="javascript数据类型"><a href="#javascript数据类型" class="headerlink" title="javascript数据类型"></a>javascript数据类型</h2><img src="/2018/12/20/js-mind-map/01.gif"><h2 id="javascript数组"><a href="#javascript数组" class="headerlink" title="javascript数组"></a>javascript数组</h2><img src="/2018/12/20/js-mind-map/02.gif"><h2 id="javascript运算符"><a href="#javascript运算符" class="headerlink" title="javascript运算符"></a>javascript运算符</h2><img src="/2018/12/20/js-mind-map/03.gif"><h2 id="javascript正则表达式"><a href="#javascript正则表达式" class="headerlink" title="javascript正则表达式"></a>javascript正则表达式</h2><img src="/2018/12/20/js-mind-map/04.gif"><h2 id="javascript字符串函数"><a href="#javascript字符串函数" class="headerlink" title="javascript字符串函数"></a>javascript字符串函数</h2><img src="/2018/12/20/js-mind-map/05.gif"><h2 id="window对象"><a href="#window对象" class="headerlink" title="window对象"></a>window对象</h2><img src="/2018/12/20/js-mind-map/06.gif"><h2 id="DOM基本操作"><a href="#DOM基本操作" class="headerlink" title="DOM基本操作"></a>DOM基本操作</h2><img src="/2018/12/20/js-mind-map/07.gif"><h2 id="javascript变量"><a href="#javascript变量" class="headerlink" title="javascript变量"></a>javascript变量</h2><img src="/2018/12/20/js-mind-map/08.gif"><h2 id="javascript函数基础"><a href="#javascript函数基础" class="headerlink" title="javascript函数基础"></a>javascript函数基础</h2><img src="/2018/12/20/js-mind-map/09.gif"><h2 id="javascript流程控制"><a href="#javascript流程控制" class="headerlink" title="javascript流程控制"></a>javascript流程控制</h2><img src="/2018/12/20/js-mind-map/10.gif"><blockquote><p>本文转自<a href="https://www.cnblogs.com/xianyulaodi/p/5886128.html" target="_blank" rel="noopener">咸鱼老弟https://www.cnblogs.com/xianyulaodi/p/5886128.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下面附上十张javascript思维导图，如果把里面的内容全部掌握，那就是高手了。思维导图提供给我们一个整体的知识体系，也可以说是一种工具，废话不多说，上图：&lt;br&gt;
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
    
      <category term="js" scheme="http://hakunamatata052.github.io/tags/js/"/>
    
      <category term="javascript" scheme="http://hakunamatata052.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>PNG格式小图标的CSS任意颜色赋色技术</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/css3-add-color/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/css3-add-color/</id>
    <published>2018-12-19T09:50:12.000Z</published>
    <updated>2020-08-21T02:57:01.360Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PNG格式小图标的CSS任意颜色赋色技术"><a href="#PNG格式小图标的CSS任意颜色赋色技术" class="headerlink" title="PNG格式小图标的CSS任意颜色赋色技术"></a>PNG格式小图标的CSS任意颜色赋色技术</h3><p><code>**注意**：PC某些浏览器不支持，请勿使用，手机端可以使用</code></p><a id="more"></a><h1 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">filter</span>: <span class="selector-tag">drop-shadow</span>(<span class="selector-tag">rgb</span>(62, 243, 52) 20<span class="selector-tag">px</span> 0<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p>原理其实很简单，使用了CSS3滤镜filter中的drop-shadow，drop-shadow滤镜可以给元素或图片非透明区域添加投影。</p><p>如果对drop-shadow不是很了解，建议先看看前些时间写的“CSS3 filter:drop-shadow滤镜与box-shadow区别应用”一文！</p><p>对于背景透明的png小图标而言，如果我们施加一个不带模糊的投影，不就等同于生成了另外一个颜色的小图标了吗？</p><p>然后，我们把原始图标隐藏在容器外面，投影图标在容器中间，不见给人感觉是赋色效果了？</p><p>比方说本文的demo，如果把icon父级的的 <em>overflow:hidden</em> 去掉，原始的图标就暴露出来啦！</p><p><img src="https://image.zhangxinxu.com/image/blog/201606/2016-06-08_004748.png" alt="效果图"></p><h1 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon icon-del"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-class">.icon</span> &#123; <span class="comment">/*图标元素必须是块级元素，有宽高，切必须溢出隐藏*/</span></span><br><span class="line">    <span class="attribute">display</span>: inline-block;  </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon</span> &gt; <span class="selector-class">.icon</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">20px</span>; <span class="comment">/*-20px为图标宽度，必须是负值*/</span></span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">    <span class="attribute">-webkit-filter</span>: <span class="built_in">drop-shadow</span>(rgb(<span class="number">62</span>, <span class="number">243</span>, <span class="number">52</span>) <span class="number">20px</span> <span class="number">0px</span>); <span class="comment">/*20px为图标宽度*/</span></span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(rgb(<span class="number">62</span>, <span class="number">243</span>, <span class="number">52</span>) <span class="number">20px</span> <span class="number">0px</span>);  <span class="comment">/*20px为图标宽度*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(delete.png) no-repeat center;   <span class="comment">/*图标png文件设置在包裹内的div中切必须是块级元素，有宽高*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>IE13+支持，Chrome和FireFox浏览器支持，移动端iOS支持，Android4.4+支持。也就是，基本上，移动端现在可以使用这种技术了。<br>既节约了流量，也让我们的开发更简单，维护更方便了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;PNG格式小图标的CSS任意颜色赋色技术&quot;&gt;&lt;a href=&quot;#PNG格式小图标的CSS任意颜色赋色技术&quot; class=&quot;headerlink&quot; title=&quot;PNG格式小图标的CSS任意颜色赋色技术&quot;&gt;&lt;/a&gt;PNG格式小图标的CSS任意颜色赋色技术&lt;/h3&gt;&lt;p&gt;&lt;code&gt;**注意**：PC某些浏览器不支持，请勿使用，手机端可以使用&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hakunamatata052.github.io/categories/CSS/"/>
    
    
      <category term="css3" scheme="http://hakunamatata052.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>css3曲线投影</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/css3-curve-shadow/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/css3-curve-shadow/</id>
    <published>2018-12-19T09:38:12.000Z</published>
    <updated>2020-08-21T02:57:01.360Z</updated>
    
    <content type="html"><![CDATA[<h3 id="模仿纸张曲线投影"><a href="#模仿纸张曲线投影" class="headerlink" title="模仿纸张曲线投影"></a>模仿纸张曲线投影</h3><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><img src="https://image.zhangxinxu.com/image/blog/201012/2010-12-12_215403.png" alt="效果图"><br><a id="more"></a></p><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p>首先，曲线投影的终效果其实是多投影重叠的效果：一点点倾斜的投影重叠一个直直的投影。<br>一般的直来直往的投影显然是使用box-shadow属性就可以搞定了。至于那个倾斜的投影，如果是现代浏览器，则需要就是CSS3变换属性transform（具体参见之前的“CSS3 Transitions, Transforms和Animation使用简介与应用展示”一文）。首先是倾斜，5度左右的样子，然后让其在主投影的后面显示就可以了。然后，单单只有倾斜是不够的，因为有一个脚会从一侧露出来，这很好理解。假设两个矩形一样大，位置完全重叠，如果发生旋转，则必定有边角不重合而露出来。即使矩形尺寸不一样，只要其以一个公共的边角旋转，至少会有两个角露出来，而实际上我们只需要一个，也就是斜边投影的哪个角。那么这个问题该如何解决呢，也很简单，同样是transform，不过这回不是旋转，而是拉伸(skew)，将规整的矩形拉伸成平行四边形，可避免旋转的时候多余的角露出来。</p><p>对于不支持CSS3的IE浏览器，按照上面的原理，理论上也是可以模拟出曲线投影效果的。因为IE下的投影效果可以使用投影滤镜（效果生硬不推荐）实现，或是模糊滤镜实现（推荐），至于旋转也有旋转滤镜。但是，就性能和成本而言，是否应该使用很值得商榷。</p><h1 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 图片的宽高可以在CSS里更改 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    *display: inline;</span><br><span class="line">    <span class="selector-tag">width</span>: 200<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 248<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eee</span>;</span><br><span class="line">    <span class="selector-tag">-webkit-box-shadow</span>: 0 1<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.27</span>), 0 0 60<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.06</span>) <span class="selector-tag">inset</span>;</span><br><span class="line">    <span class="selector-tag">-moz-box-shadow</span>: 0 1<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.27</span>), 0 0 40<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.06</span>) <span class="selector-tag">inset</span>; </span><br><span class="line">    <span class="selector-tag">box-shadow</span>: 0 1<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.27</span>), 0 0 40<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.06</span>) <span class="selector-tag">inset</span>;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line">    *<span class="selector-tag">zoom</span>: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.img</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">skew</span>(-<span class="number">15deg</span>) <span class="built_in">rotate</span>(-<span class="number">6deg</span>);</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">skew</span>(-<span class="number">15deg</span>) <span class="built_in">rotate</span>(-<span class="number">6deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">skew</span>(-<span class="number">15deg</span>) <span class="built_in">rotate</span>(-<span class="number">6deg</span>);</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.img</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">skew</span>(<span class="number">15deg</span>) <span class="built_in">rotate</span>(<span class="number">6deg</span>);</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">skew</span>(<span class="number">15deg</span>) <span class="built_in">rotate</span>(<span class="number">6deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">15deg</span>) <span class="built_in">rotate</span>(<span class="number">6deg</span>);</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.img</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.img</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">55%</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>); </span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="友情提示"><a href="#友情提示" class="headerlink" title="友情提示"></a>友情提示</h1><p>这里的斜边投影使用的是负值z-index定位到本体阴影的后面的。由于使用的是z-index负值，所以，请务必保证当前投影元素的所有父标签均没有背景图片或背景色（body标签除外），否则，斜边投影是看不到的。</p><h6 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a>原文链接</h6><p><a href="https://www.zhangxinxu.com/wordpress/2010/12/css3-box-shadow%E5%AE%9E%E7%8E%B0%E7%BA%B8%E5%BC%A0%E7%9A%84%E6%9B%B2%E7%BA%BF%E6%8A%95%E5%BD%B1%E6%95%88%E6%9E%9C/" target="_blank" rel="noopener">CSS3 box-shadow实现纸张的曲线投影效果</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;模仿纸张曲线投影&quot;&gt;&lt;a href=&quot;#模仿纸张曲线投影&quot; class=&quot;headerlink&quot; title=&quot;模仿纸张曲线投影&quot;&gt;&lt;/a&gt;模仿纸张曲线投影&lt;/h3&gt;&lt;h1 id=&quot;效果展示&quot;&gt;&lt;a href=&quot;#效果展示&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://image.zhangxinxu.com/image/blog/201012/2010-12-12_215403.png&quot; alt=&quot;效果图&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hakunamatata052.github.io/categories/CSS/"/>
    
    
      <category term="css" scheme="http://hakunamatata052.github.io/tags/css/"/>
    
      <category term="css3" scheme="http://hakunamatata052.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>jQueryAjax请求完全版</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/jquery-ajax/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/jquery-ajax/</id>
    <published>2018-12-19T09:34:07.000Z</published>
    <updated>2020-08-21T02:57:01.383Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jQueryAjax请求完全版"><a href="#jQueryAjax请求完全版" class="headerlink" title="jQueryAjax请求完全版"></a>jQueryAjax请求完全版</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    <span class="keyword">async</span>: <span class="literal">true</span>, <span class="comment">//true异步，false同步</span></span><br><span class="line">    url: <span class="string">'/uploads/rs/419/nvhogkww/data.json'</span>,</span><br><span class="line">    type: <span class="string">'get'</span>,</span><br><span class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">XHR, TS</span>) </span>&#123; alert(<span class="string">'complete'</span>); &#125;, <span class="comment">//完成回调函数(XHR, TS)</span></span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//XMLHttpRequest.readyState:</span></span><br><span class="line">        <span class="comment">//0 － （未初始化）还没有调用send()方法</span></span><br><span class="line">        <span class="comment">//1 － （载入）已调用send()方法，正在发送请求</span></span><br><span class="line">        <span class="comment">//2 － （载入完成）send()方法执行完成，已经接收到全部响应内容</span></span><br><span class="line">        <span class="comment">//3 － （交互）正在解析响应内容</span></span><br><span class="line">        <span class="comment">//4 － （完成）响应内容解析完成，可以在客户端调用了</span></span><br><span class="line">        <span class="comment">//XMLHttpRequest.status:</span></span><br><span class="line">        <span class="comment">//textStatus: "timeout", "error", "notmodified" 和 "parsererror"。</span></span><br><span class="line">        <span class="comment">//（0）null</span></span><br><span class="line">        <span class="comment">//（1）timeout 超时</span></span><br><span class="line">        <span class="comment">//（2）error</span></span><br><span class="line">        <span class="comment">//（3）notmodified 未修改</span></span><br><span class="line">        <span class="comment">//（4）parsererror 解析错误</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'错误1：'</span> + XMLHttpRequest.readyState);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'错误2：'</span> + textStatus);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'错误3：'</span> + errorThrown);</span><br><span class="line">    &#125;, <span class="comment">//默认值: 自动判断 (xml 或 html)。请求失败时调用此函数。有以下三个参数：XMLHttpRequest 对象、错误信息、（可选）捕获的异常对象。</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123; alert(<span class="string">'success'</span>); &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;jQueryAjax请求完全版&quot;&gt;&lt;a href=&quot;#jQueryAjax请求完全版&quot; class=&quot;headerlink&quot; title=&quot;jQueryAjax请求完全版&quot;&gt;&lt;/a&gt;jQueryAjax请求完全版&lt;/h3&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
      <category term="jQuery" scheme="http://hakunamatata052.github.io/categories/JS/jQuery/"/>
    
    
      <category term="js" scheme="http://hakunamatata052.github.io/tags/js/"/>
    
      <category term="jquery" scheme="http://hakunamatata052.github.io/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>Vuex的使用</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/vuex/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/vuex/</id>
    <published>2018-12-19T08:25:36.000Z</published>
    <updated>2020-08-21T02:57:01.411Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/01.jpg" alt="VUEX"><br><a id="more"></a></p><h2 id="Vuex的使用"><a href="#Vuex的使用" class="headerlink" title="Vuex的使用"></a>Vuex的使用</h2><h3 id="安装Vuex"><a href="#安装Vuex" class="headerlink" title="安装Vuex"></a>安装Vuex</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex --save</span><br></pre></td></tr></table></figure><blockquote><p>淘宝镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install vuex --save</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="新建js文件"><a href="#新建js文件" class="headerlink" title="新建js文件"></a>新建js文件</h3><p>可以放在store文件夹中命名为index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line">Vue.use(vuex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> vuex.Store(&#123;</span><br><span class="line">state: &#123;</span><br><span class="line">api:<span class="string">'http://wjdh03.sjgogo.cn/api/'</span>,</span><br><span class="line">token:<span class="string">"57373A7E05CB44079B2F12C14A5E83A9"</span>,</span><br><span class="line">domain: <span class="string">"http://www.baidu.com"</span>,</span><br><span class="line">notice: <span class="literal">true</span>,</span><br><span class="line">&#125;,</span><br><span class="line">mutations: &#123;</span><br><span class="line">domainURI(url) &#123;</span><br><span class="line"><span class="keyword">var</span> durl = <span class="regexp">/http:\/\/([^\/]+)\//i</span>;</span><br><span class="line"><span class="keyword">var</span> domain = url.match(durl);</span><br><span class="line"><span class="keyword">return</span> domain[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="调用Vuex"><a href="#调用Vuex" class="headerlink" title="调用Vuex"></a>调用Vuex</h4><p>main.js中引入Vuex并使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span>  <span class="comment">//引入Vuex</span></span><br></pre></td></tr></table></figure><p>载入Vuex<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vue = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,   <span class="comment">//载入Vuex</span></span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure></p><h3 id="使用全局状态（变量）"><a href="#使用全局状态（变量）" class="headerlink" title="使用全局状态（变量）"></a>使用全局状态（变量）</h3><p>在需要使用的组件中 使用调用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/01.jpg&quot; alt=&quot;VUEX&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
      <category term="VUE" scheme="http://hakunamatata052.github.io/categories/JS/VUE/"/>
    
    
      <category term="vue" scheme="http://hakunamatata052.github.io/tags/vue/"/>
    
      <category term="vuex" scheme="http://hakunamatata052.github.io/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>统计数组中相同值的个数</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/Array-of-the-same-kind/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/Array-of-the-same-kind/</id>
    <published>2018-12-19T08:24:18.000Z</published>
    <updated>2020-08-21T02:57:01.359Z</updated>
    
    <content type="html"><![CDATA[<h3 id="统计数组中相同值的个数"><a href="#统计数组中相同值的个数" class="headerlink" title="统计数组中相同值的个数"></a>统计数组中相同值的个数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrCheck</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newArr = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> newJson = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> temp=arr[i];</span><br><span class="line">    <span class="keyword">var</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;arr.length;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(arr[j]==temp)&#123;</span><br><span class="line">        count++;</span><br><span class="line">        arr[j]=<span class="number">-1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(temp != <span class="number">-1</span>)&#123;</span><br><span class="line">newJson.name = temp;</span><br><span class="line"></span><br><span class="line">newJson.num = count;</span><br><span class="line">      newArr.push(temp+<span class="string">":"</span>+count)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br><span class="line">arrCheck([&#123;<span class="string">"name"</span>:<span class="string">""</span>&#125;,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>]);</span><br><span class="line"><span class="built_in">document</span>.write(arrCheck([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>]));</span><br></pre></td></tr></table></figure><p>将数字改为JSON可统计相同JSON值出现的次数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;统计数组中相同值的个数&quot;&gt;&lt;a href=&quot;#统计数组中相同值的个数&quot; class=&quot;headerlink&quot; title=&quot;统计数组中相同值的个数&quot;&gt;&lt;/a&gt;统计数组中相同值的个数&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;
      
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
    
      <category term="js" scheme="http://hakunamatata052.github.io/tags/js/"/>
    
      <category term="数组" scheme="http://hakunamatata052.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="Array" scheme="http://hakunamatata052.github.io/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>js求日期差</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/timeX/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/timeX/</id>
    <published>2018-12-19T08:21:00.000Z</published>
    <updated>2020-08-21T02:57:01.410Z</updated>
    
    <content type="html"><![CDATA[<h3 id="求时间差函数"><a href="#求时间差函数" class="headerlink" title="求时间差函数"></a>求时间差函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s1 = <span class="string">'2017-02-26'</span>;  <span class="comment">//起始日期</span></span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">'2017-03-02'</span>;  <span class="comment">//结束日期</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str = DateDiff(s1,s2);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">DateDiff</span>(<span class="params">sDate1,  sDate2</span>)</span>&#123;    <span class="comment">//sDate1和sDate2是2002-12-18格式  </span></span><br><span class="line">       <span class="keyword">var</span>  aDate,  oDate1,  oDate2,  iDays  </span><br><span class="line">       aDate  =  sDate1.split(<span class="string">"-"</span>)  </span><br><span class="line">       oDate1  =  <span class="keyword">new</span>  <span class="built_in">Date</span>(aDate[<span class="number">1</span>]   +  aDate[<span class="number">2</span>]  +  <span class="string">'-'</span>  +  aDate[<span class="number">0</span>])    <span class="comment">//转换为12-18-2002格式  </span></span><br><span class="line">       aDate  =  sDate2.split(<span class="string">"-"</span>)  </span><br><span class="line">       oDate2  =  <span class="keyword">new</span>  <span class="built_in">Date</span>(aDate[<span class="number">1</span>]  +  <span class="string">'-'</span>  +  aDate[<span class="number">2</span>]  +  <span class="string">'-'</span>  +  aDate[<span class="number">0</span>])  </span><br><span class="line">       iDays  =  <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.abs(oDate1  -  oDate2)  /  <span class="number">1000</span>  /  <span class="number">60</span>  /  <span class="number">60</span>  /<span class="number">24</span>)    <span class="comment">//把相差的毫秒数转换为天数  </span></span><br><span class="line">       <span class="keyword">return</span>  iDays  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;求时间差函数&quot;&gt;&lt;a href=&quot;#求时间差函数&quot; class=&quot;headerlink&quot; title=&quot;求时间差函数&quot;&gt;&lt;/a&gt;求时间差函数&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="JS" scheme="http://hakunamatata052.github.io/categories/JS/"/>
    
    
      <category term="js" scheme="http://hakunamatata052.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>无js实现选项卡效果</title>
    <link href="http://hakunamatata052.github.io/2018/12/19/nojs-tabs/"/>
    <id>http://hakunamatata052.github.io/2018/12/19/nojs-tabs/</id>
    <published>2018-12-19T06:52:35.000Z</published>
    <updated>2020-08-21T02:57:01.408Z</updated>
    
    <content type="html"><![CDATA[<h3 id="无js实现选项卡效果"><a href="#无js实现选项卡效果" class="headerlink" title="无js实现选项卡效果"></a>无js实现选项卡效果</h3><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><iframe src="/dome1/" width="600" height="300" frameborder="no" border="0" marginwidth="0" marginheight="0" allowtransparency="yes"></iframe><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p>利用锚链接和滚动条实现</p><h1 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h1><p>基本功能可以满足，但有两个问题，一是由于改变location的hash实现的定位，会触发浏览器原生滚动行为，体验不好；二是选项卡内容的切换“邦邦邦”过于生硬<br><a id="more"></a></p><h1 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span> <span class="attr">id</span>=<span class="string">"one"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span> <span class="attr">id</span>=<span class="string">"three"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span> <span class="attr">id</span>=<span class="string">"four"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"link"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">href</span>=<span class="string">"#one"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">href</span>=<span class="string">"#two"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">href</span>=<span class="string">"#three"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">href</span>=<span class="string">"#four"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ddd</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">80px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.click</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.click</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#345</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><h1 id="效果展示-1"><a href="#效果展示-1" class="headerlink" title="效果展示"></a>效果展示</h1><p><a href="https://hakunamatata052.github.io/blog/example/2.html">点击查看效果</a></p><h1 id="实现原理-1"><a href="#实现原理-1" class="headerlink" title="实现原理"></a>实现原理</h1><p>基于控件元素focus触发滚动重定位</p><h1 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h1><p>选项卡内容切换的时候，还是“邦邦邦”这种干巴巴的效果，并没有滑来滑去那种湿湿的效果</p><h1 id="具体代码-1"><a href="#具体代码-1" class="headerlink" title="具体代码"></a>具体代码</h1><h2 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"one"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"three"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"four"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"link"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">for</span>=<span class="string">"one"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">for</span>=<span class="string">"two"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">for</span>=<span class="string">"three"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"click"</span> <span class="attr">for</span>=<span class="string">"four"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS-1"><a href="#CSS-1" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10em</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.list</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ddd</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.list</span> &gt; <span class="selector-tag">input</span> &#123; </span><br><span class="line">  <span class="attribute">position</span>: absolute; <span class="attribute">top</span>:<span class="number">0</span>; </span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>; <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;无js实现选项卡效果&quot;&gt;&lt;a href=&quot;#无js实现选项卡效果&quot; class=&quot;headerlink&quot; title=&quot;无js实现选项卡效果&quot;&gt;&lt;/a&gt;无js实现选项卡效果&lt;/h3&gt;&lt;h2 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h2&gt;&lt;h1 id=&quot;效果展示&quot;&gt;&lt;a href=&quot;#效果展示&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h1&gt;&lt;iframe src=&quot;/dome1/&quot; width=&quot;600&quot; height=&quot;300&quot; frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; allowtransparency=&quot;yes&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;实现原理&quot;&gt;&lt;a href=&quot;#实现原理&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h1&gt;&lt;p&gt;利用锚链接和滚动条实现&lt;/p&gt;
&lt;h1 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h1&gt;&lt;p&gt;基本功能可以满足，但有两个问题，一是由于改变location的hash实现的定位，会触发浏览器原生滚动行为，体验不好；二是选项卡内容的切换“邦邦邦”过于生硬&lt;br&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hakunamatata052.github.io/categories/HTML/"/>
    
    
      <category term="tab" scheme="http://hakunamatata052.github.io/tags/tab/"/>
    
      <category term="选项卡" scheme="http://hakunamatata052.github.io/tags/%E9%80%89%E9%A1%B9%E5%8D%A1/"/>
    
      <category term="无js" scheme="http://hakunamatata052.github.io/tags/%E6%97%A0js/"/>
    
  </entry>
  
</feed>
